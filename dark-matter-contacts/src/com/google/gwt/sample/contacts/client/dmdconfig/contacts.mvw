Module
moduleName      contacts
dependsOnSchema contacts
dependsOnModule	mvwcomms
genPackage      com.google.gwt.sample.contacts.client
description     The contacts module defines components that let us manage a set of contacts.

///////////////////////////////////////////////////////////////////////////////
//EVENTS

Event
eventName       AddContactEvent
description     Fired when the Add button is clicked.
 
Event
eventName       DeleteContactsEvent
argVector		(List<ContactDMO> deletedContacts)
importThis		java.util.List
importThis		com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description     Indicates one or more contacts to be deleted.
 
Event
eventName       ContactUpdatedEvent
argVector		(ContactDMO updatedContact)
importThis		com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description		Fired when a contact has its information alterred. The modifications
 will have been recorded in the updatedContact. In the case of a newly added contact,
 the Contact will not have an object name; this must be generated on the server.

Event
eventName       EditContactCancelledEvent
description     Fired when the user hits cancel when viewing or adding Contact. We
 revert back to the ContactListView

Event
eventName       EditContactEvent
argVector		(ContactDMO contact)
importThis		com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description     Fired when a single Contact is clicked by the user. When this is
 done, we display the EditContactView.

///////////////////////////////////////////////////////////////////////////////
// VIEWS
 
View
viewName        	ContactListView
broadcastOnly		AddContactEvent
broadcastOnly		EditContactEvent
local				DeleteContactsEvent
viewMethod			void displayContacts(List<ContactDMO> contacts)
viewMethod			void deleteContact(ContactDMO contact)
viewMethod			void addContact(ContactDMO contact)
viewMethod			void updateContact(ContactDMO contact)
viewImport			java.util.List
viewImport			com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description			The ContactListView displays a list of Contacts and shows the first
 and last names and the email address of the contact.
 
Presenter
presenterName		ContactListPresenter
managesView			ContactListView
sendsGetRequest		contact CENTRALERRORS DMPERRORS RPCERRORS CREATED DELETED MODIFIED
sendsDeleteRequest	contact CENTRALERRORS
description			This presenter takes care of retrieving the summary information
 for our Contacts and populates the ContactListView. It takes care of deletion
 requests from the view and listens for Contact create events and updates the 
 view accordingly.

View
viewName			EditContactView
local				ContactUpdatedEvent
broadcastOnly		EditContactCancelledEvent
viewMethod			void setContact(ContactDMO contact)
viewImport			com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description			The EditContactView displays a single Contact. 
 If the Save button is clicked, a ContactUpdatedEvent is sent with the recorded
 modifications. If cancel is clicked, we revert to the ContactListView.

//Presenter
//presenterName		EditContactPresenter
//managesView			EditContactView
//sendsGetRequest		contact CENTRALERRORS
//sendsSetRequest		contact CENTRALERRORS
//description			The EditContactPresenter retrieves a complete Contact or creates
// a new Contact and populates the EditContactView. If the user hits the Save button,
// we send a Set or Create request to the server depending on the circumstances.

Controller
controllerName			ContactAppController
handlesEvent			AddContactEvent
handlesEvent			EditContactEvent
handlesEvent			EditContactCancelledEvent
centralDMPErrorHandler	true
centralRPCErrorHandler	true
//handlesEvent	ContactUpdatedEvent
description			The ContactAppController provides a overall management of the 
 Contact application.

///////////////////////////////////////////////////////////////////////////////
//PLACES & ACTIVITIES

Place
placeName			LoginPlace
placePrefix			login
runsActivity		PerformLoginActivity
description			When the ContactApp is started, this is the default place.

Activity
activityName		PerformLoginActivity
description			The PerformLoginActivity prompts for a valid user name and password.
 If login is successful, we go to the listContacts activity.

Place
placeName			ListPlace
placePrefix			list
runsActivity		ListContactsActivity
description			The place where we list the available contacts.

Activity
activityName		ListContactsActivity
description			The ListContactsActivity will retrieve the summary information about our contacts
 and display them in a ContactListView.

Place
placeName			EditPlace
placePrefix			edit
runsActivity		EditContactActivity
description			The place where we edit or add a Contact.

Activity
activityName		EditContactActivity
abstractActivity	true
sendsGetRequest		contact CENTRALERRORS
sendsSetRequest		contact CENTRALERRORS
managesView			EditContactView
description			The EditContactActivity will retrieve the Contact details if a 
 Contact uuid was specified as part of the edit place URL. If not, we are assumed
 to be creating a new Contact. If the user hits OK, we send a Set or Create request
 to the server. If the user hits cancel, we go to the contacts list.

///////////////////////////////////////////////////////////////////////////////
// The application

WebApplication
appName				ContactApp
usesController		CommsController
defaultPlace		LoginPlace
