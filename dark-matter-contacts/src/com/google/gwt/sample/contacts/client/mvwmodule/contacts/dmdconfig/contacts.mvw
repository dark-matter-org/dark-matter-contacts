Module
moduleName      contacts
dependsOnSchema contacts
dependsOnModule	mvwcomms
dependsOnModule gxtforms
genPackage      com.google.gwt.sample.contacts.client.mvwmodule.contacts
description     The contacts module defines components that let us manage a set of contacts.

///////////////////////////////////////////////////////////////////////////////
// RUN CONTEXT ITEMS

RunContextItem
itemName			images
useClass     		com.google.gwt.sample.contacts.client.mvwmodule.contacts.resources.Images
construction 		GWT.create(Images.class)
description			Image resources for the contact application. If you want to
 access these images, you would simply specify:<br/>
 <pre>
 usesRunContextItem	images
 </pre>
 in the component where you wanted to access them.

///////////////////////////////////////////////////////////////////////////////
// EVENTS

Event
eventName       AddContactEvent
description     Fired when the Add button is clicked.
 
Event
eventName       DeleteContactsEvent
argVector		(List<ContactDMO> deletedContacts)
importThis		java.util.List
importThis		com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description     Indicates one or more contacts to be deleted.
 
Event
eventName       ContactUpdatedEvent
argVector		(ContactDMO updatedContact)
importThis		com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description		Fired when a contact has its information alterred. The modifications
 will have been recorded in the updatedContact. In the case of a newly added contact,
 the Contact will not have an object name; this must be generated on the server.

Event
eventName       EditContactCancelledEvent
description     Fired when the user hits cancel when viewing or adding Contact. We
 revert back to the ContactListView

Event
eventName       EditContactEvent
argVector		(ContactDMO contact)
importThis		com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description     Fired when a single Contact is clicked by the user. When this is
 done, we display the EditContactView.

///////////////////////////////////////////////////////////////////////////////
 
Place
placeName			ListContactsPlace
placePrefix			list
runsActivity		ListContactsActivity
description			The place where we list the available contacts.

Activity
activityName		ListContactsActivity
subpackage			listing
abstractActivity	true
//usesController		ContactAppController
usesRunContextItem	placeController	
description			The ListContactsActivity will retrieve the summary information about our contacts
 and display them in a ContactListView.

View
viewName        	ContactListView
subpackage			listing
broadcastOnly		AddContactEvent
broadcastOnly		EditContactEvent
local				DeleteContactsEvent
viewMethod			void displayContacts(HashMap<DmcObjectName, GxtWrapper> contacts)
viewMethod			void deleteContact(ContactGXT contact)
viewMethod			void addContact(ContactGXT contact)
//viewMethod			void updateContact(ContactGXT contact)
viewMethod			void contactsSelected(List<ContactGXT> contacts)
viewMethod			void displayFeedback(String info)
viewMethod			void displayError(String info)
viewImport			java.util.List
viewImport			java.util.HashMap
viewImport			org.dmd.dmc.DmcObjectName
viewImport			com.google.gwt.sample.contacts.client.generated.gxt.ContactGXT
viewImport			org.dmd.mvw.client.gxt.dmw.GxtWrapper
usesRunContextItem	images
description			The ContactListView displays a list of Contacts and shows the first
 and last names and the email address of the contact.
 
Presenter
presenterName			ContactListPresenter
subpackage				listing
managesView				ContactListView
//instantiatesPresenter	EditContactPresenter
//instantiatesView		EditContactView
description				This presenter takes care of retrieving the summary information
 for our Contacts and populates the ContactListView. It takes care of deletion
 requests from the view and listens for Contact create events and updates the 
 view accordingly.

///////////////////////////////////////////////////////////////////////////////
// EDIT CONTACT

Place
placeName			EditPlace
placePrefix			edit
runsActivity		EditContactActivity
description			The place where we edit or add a Contact.

Activity
activityName		EditContactActivity
subpackage			edit
abstractActivity	true
sendsRequest		GetRequest getContact
//sendsGetRequest		getContact CENTRALERRORS
sendsRequest		SetRequest setContact Contact
sendsRequest		CreateRequest createContact Contact
//sendsSetRequest		setContact CENTRALERRORS
managesView			EditContactView
description			The EditContactActivity will retrieve the Contact details if a 
 Contact uuid was specified as part of the edit place URL. If not, we are assumed
 to be creating a new Contact. If the user hits OK, we send a Set or Create request
 to the server. If the user hits cancel, we go to the contacts list.

View
viewName			EditContactView
subpackage			edit
local				ContactUpdatedEvent
broadcastOnly		EditContactCancelledEvent
viewMethod			void setContact(ContactDMO contact)
viewImport			com.google.gwt.sample.contacts.shared.generated.dmo.ContactDMO
description			The EditContactView displays a single Contact. 
 If the Save button is clicked, a ContactUpdatedEvent is sent with the recorded
 modifications. If cancel is clicked, we revert to the ContactListView.
 
//FormBindingDefinition
//bindingName				ContactBinding
//editObject				Contact
//editField				someRelation GXTTextField MUST	: Some relation


//Presenter
//presenterName			EditContactPresenter
//managesView			EditContactView
//instantiatesView		EditContactView
//sendsGetRequest		getContact CENTRALERRORS
//sendsSetRequest		setContact CENTRALERRORS
//description			The EditContactPresenter retrieves a complete Contact or creates
// a new Contact and populates the EditContactView. If the user hits the Save button,
// we send a Set or Create request to the server depending on the circumstances.
